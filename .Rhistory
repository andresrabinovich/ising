p <- unique(datos$p)
p<-p[p>0.4 & p <0.7]
datos_filtrados <- data.frame(p=NULL, s=NULL, ns=NULL)
for(i in p){
m               <- datos[which(datos$p == i), ]
datos_filtrados <- rbind(datos_filtrados, m[(m$s/max(m$s)) > 0.01 & (m$s/max(m$s)) < 0.12, ])
}
datos_filtrados2          <- datos_filtrados
datos_filtrados           <- datos_filtrados2
tau                       <- 1.74
sigma                     <- 36/91
pc                        <- 0.5927
q0                        <- exp(1)^(-4)
datos_filtrados$ns        <- datos_filtrados$ns/(64*64*30000)
s                         <- unique(datos_filtrados$s)
nsc                       <- q0*s^(-tau)
names(nsc)                <- s
epsilon                   <- (datos_filtrados$p-pc)/pc
y                         <- datos_filtrados$ns/nsc[as.character(datos_filtrados$s)]
z                         <- (datos_filtrados$s^sigma)*epsilon
plot(z, y)
ggplot(data.frame(z=z, nu=(y))) + geom_point(aes(x=z, y=nu), size=0.1)
ggplot(data.frame(z=log(z), nu=log(y))) + geom_point(aes(x=z, y=nu), size=0.1)
ggplot(data.frame(z=z, nu=(y))) + geom_point(aes(x=z, y=nu), size=0.1)
ggplot(data.frame(z=log(abs(z)), nu=log(y))) + geom_point(aes(x=z, y=nu), size=0.1)
ggplot(data.frame(z=z, nu=(y))) + geom_point(aes(x=z, y=nu), size=0.1)
ggplot(data.frame(z=z, nu=(y))) + geom_point(aes(x=z, y=nu), size=0.1)
#ej5
datos              <- as.data.frame(read.delim("~/Escritorio/fisica_computacional/percolacion/programacion/corridas/ej4/masas.txt"))
colnames(datos)    <- c("p", "s", "ns")
datos_filtrados    <- datos[datos$s > 1 & datos$s <= 15, ]
datos_filtrados$ns <- datos_filtrados$ns/(64*64*30000)
#datos_filtrados    <- datos_filtrados[datos_filtrados[, 1] > 0.58 & datos_filtrados[, 1] < 0.6, ]
pc                 <- 0.5927
datos_filtrados$e  <- (datos_filtrados$p-pc)/pc
for(i in 2:15){
x <- which(datos_filtrados$s == i)
#plot(epsilon[x], datos_filtrados[x, 3])
}
#datos_filtrados$s <- as.factor(datos_filtrados$s)
#ej5
datos              <- as.data.frame(read.delim("~/fisica_computacional/percolacion/programacion/corridas/ej4/masas.txt"))
colnames(datos)    <- c("p", "s", "ns")
datos_filtrados    <- datos[datos$s > 1 & datos$s <= 15, ]
datos_filtrados$ns <- datos_filtrados$ns/(64*64*30000)
#datos_filtrados    <- datos_filtrados[datos_filtrados[, 1] > 0.58 & datos_filtrados[, 1] < 0.6, ]
pc                 <- 0.5927
datos_filtrados$e  <- (datos_filtrados$p-pc)/pc
for(i in 2:15){
x <- which(datos_filtrados$s == i)
#plot(epsilon[x], datos_filtrados[x, 3])
}
ggplot(datos_filtrados) + geom_point(aes(x=e, y=ns, color = as.factor(s)))
maximos <- aggregate(ns ~ s, datos_filtrados, FUN = max)
maximos <- merge(maximos, datos_filtrados)
maximos[order(maximos$s), ]
y<-log(abs(maximos$p-pc))
x<-log(maximos$s)
datos<-data.frame(x=x, y=y)
ggplot(datos, aes(x=x,y=y)) + geom_point() + stat_smooth(method = "lm", col = "red", se=FALSE, size=0.5) +
labs(x="log(s)", y="log(|<Pmax>-<Pc_L>|)") +
theme_original()
#plot(datos$L, datos$mu)
fiteo<-lm(y~x, data=datos)
#abline(fiteo)
summary(fiteo)
36/90
36/91
datos              <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas", tamano[red], ".txt", sep="")))
tamano             <- c(6, 32, 128, 256)
red                <- 4
datos              <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas", tamano[red], ".txt", sep="")))
datos              <- rbind(as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas2", tamano[red], ".txt", sep=""))))
datos              <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas", tamano[red], ".txt", sep="")))
datos              <- rbind(datos, as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas2", tamano[red], ".txt", sep=""))))
head(datos)
datos2             <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas2", tamano[red], ".txt", sep="")))
head(datos2)
colnames(datos2)   <- c("id", "p", "s", "ns")
datos              <- rbind(datos, datos2)
datos              <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas", tamano[red], ".txt", sep="")))
head(datos)
datos              <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas", tamano[red], ".txt", sep="")))
colnames(datos)    <- c("p", "s", "ns")
datos2             <- as.data.frame(read.delim(paste("~/fisica_computacional/percolacion/programacion/corridas/ej6/masas2", tamano[red], ".txt", sep="")))
colnames(datos2)   <- c("p", "s", "ns")
datos              <- rbind(datos, datos2)
datos              <- cbind(1:nrow(datos), datos)
colnames(datos)    <- c("id", "p", "s", "ns")
head(datos)
tail(datos)
pc                 <- c(0.5743, 0.5924, 0.5925, 0.5927)
datos_filtrados    <- datos[datos$p > 0.4 & datos$p < 0.7, ]
dim(datos_filtrados)
dim(datos)
datos_filtrados$ns <- datos_filtrados$ns/(tamano[red]*tamano[red]*10000)
datos_filtrados$s2 <- datos_filtrados$s^2
datos_filtrados$nss2 <- datos_filtrados$ns*datos_filtrados$s2
M2                 <- aggregate(nss2 ~ p, datos_filtrados, FUN = sum)
M2$epsilon         <- (M2$p - pc[red])/pc[red]
maximo <- which.max(M2$nss2)
plot(M2$epsilon, M2$nss2)
points(M2$epsilon[maximo], M2$nss2[maximo], col="red")
plot(log(abs(M2$epsilon))[maximo:(maximo+50)], log(M2$nss2)[maximo:(maximo+50)])
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -40
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -10
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -15
for(i in 1:40){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- 0
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- -40
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:40){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:40){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
plot(log(M2$epsilon), log(M2$nss2))
plot(log(abs(M2$epsilon)), log(M2$nss2))
plot(abs(M2$epsilon), M2$nss2)
plot(log(abs(M2$epsilon)), log(M2$nss2))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))
points(log(abs(M2$epsilon[maximo+10])), log(M2$nss2[maximo+10]))
points(log(abs(M2$epsilon[maximo+10])), log(M2$nss2[maximo+10]), col="red")
points(log(abs(M2$epsilon[maximo+15])), log(M2$nss2[maximo+15]), col="red")
points(log(abs(M2$epsilon[maximo+25])), log(M2$nss2[maximo+25]), col="red")
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+25):(maximo+100), ]))
summary(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+25):(maximo+100), ]))
corrimiento_derecha <- 1
points(log(abs(M2$epsilon[maximo+corrimiento_derecha])), log(M2$nss2[maximo+corrimiento_derecha]), col="red")
summary(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+100), ]))
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+100), ]))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -50
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -20
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -25
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -15
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 30
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 20
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:35){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
ggplot(M2) + geom_point(aes(x=epsilon, y=nss2))
gamma[40, "gamma"]
gamma[39, "gamma"]
gamma[35, "gamma"]
#Cargamos las librerías que vamos a usar y generamos el theme para los plots
library(ggplot2)
library(readr)
theme_original <- function (base_size = 10, base_family = "") {
theme_gray(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill="#e1e1e1"),
panel.grid.minor = element_line(size=0.1, color="white"),
panel.grid.major = element_line(size=0.2, color="white"),
text = element_text(family = base_family, face = "plain",
color = "black", size = base_size,
hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9,
margin = margin(), debug = FALSE)
)
}
setwd("~/fisica_computacional/ising/")
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
ggplot(data=datos, aes(x=1:nrow(datos), y=X1)) +
geom_point() +
labs(title="Ising J=1, B=0") +
labs(x="Paso", y="Energia") +
theme_original()
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=1, B=0") +
labs(x="Paso", y="Energia") +
theme_original()
nrow(dato)
nrow(datos)
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=1, B=0") +
labs(x="Paso", y="Energia") +
theme_original()
tanh(1)
configuracion <- data.frame(read_csv("corridas/configuracion.txt", col_names = FALSE))
for(i in 1:100){
heatmap(as.matrix(configuracion)[(((i-1)*n)+1):(i*n), ], Colv=NA, Rowv=NA, scale='none', labRow = NA, labCol = NA)
invisible(readline(prompt="Press [enter] to continue"))
}
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=1, B=0") +
labs(x="Paso", y="Energia") +
theme_original()
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
tgh(-1)
tanh(-1)
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
sinh(1)
sinh(1)/sqrt(sinh(1)^2+1)
tanh(-1)
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
datos <-data.frame(read_csv("corridas/energias.txt", col_names = FALSE))
n = 256
ggplot(data=datos, aes(x=1:nrow(datos), y=X1/(n*n))) +
geom_point() +
labs(title="Ising J=0, B=-1") +
labs(x="Paso", y="Energia") +
theme_original()
