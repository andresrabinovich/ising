gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- 0
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- -40
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 0
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:30){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:40){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:40){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -50
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
plot(log(M2$epsilon), log(M2$nss2))
plot(log(abs(M2$epsilon)), log(M2$nss2))
plot(abs(M2$epsilon), M2$nss2)
plot(log(abs(M2$epsilon)), log(M2$nss2))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))
points(log(abs(M2$epsilon[maximo+10])), log(M2$nss2[maximo+10]))
points(log(abs(M2$epsilon[maximo+10])), log(M2$nss2[maximo+10]), col="red")
points(log(abs(M2$epsilon[maximo+15])), log(M2$nss2[maximo+15]), col="red")
points(log(abs(M2$epsilon[maximo+25])), log(M2$nss2[maximo+25]), col="red")
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+25):(maximo+100), ]))
summary(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+25):(maximo+100), ]))
corrimiento_derecha <- 1
points(log(abs(M2$epsilon[maximo+corrimiento_derecha])), log(M2$nss2[maximo+corrimiento_derecha]), col="red")
summary(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+100), ]))
abline(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+100), ]))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 3
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 10
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -3
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -50
for(i in 1:50){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -20
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -25
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -15
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 30
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 20
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:100){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
#Fiteamos gamma tomando el máximo y n puntos a derecha y despues n puntos a izquierda, todo log
gamma <- data.frame(cantidad_puntos=numeric(0), gamma=numeric(0), direccion=character())
corrimiento_derecha <- 15
corrimiento_izquierda <- -30
for(i in 1:35){
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo+i), ]), col="red")
#abline(lm(log(nss2)~log(abs(epsilon)), M2[maximo:(maximo-i), ]), col="blue")
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_derecha):(maximo+corrimiento_derecha+i), ]))[2], direccion="derecha"))
gamma <- rbind(gamma, data.frame(cantidad_puntos=i, gamma=coef(lm(log(nss2)~log(abs(epsilon)), M2[(maximo+corrimiento_izquierda-i):(maximo+corrimiento_izquierda), ]))[2], direccion="izquierda"))
}
#Graficamos los distintos valores de gamma
ggplot(gamma) + geom_point(aes(x=cantidad_puntos, y=gamma, color = direccion))
ggplot(M2) + geom_point(aes(x=epsilon, y=nss2))
gamma[40, "gamma"]
gamma[39, "gamma"]
gamma[35, "gamma"]
#Cargamos las librerías que vamos a usar y generamos el theme para los plots
library(ggplot2)
library(readr)
theme_original <- function (base_size = 10, base_family = "") {
theme_gray(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill="#e1e1e1"),
panel.grid.minor = element_line(size=0.1, color="white"),
panel.grid.major = element_line(size=0.2, color="white"),
text = element_text(family = base_family, face = "plain",
color = "black", size = base_size,
hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9,
margin = margin(), debug = FALSE)
)
}
setwd("~/fisica_computacional/ising/")
datos   <-data.frame(read_csv("corridas/autocorrelacion_energia.txt"))
datos   <-data.frame(read_csv("corridas/autocorrelacion/energia.txt"))
datos   <-data.frame(read_csv("corridas/autocorrelacion/autocorrelacion_energia.txt"))
autocorrelacion <- matrix(ncol=2, nrow=0)
lag.max = 10000
unique(datos$T)
Ts <- c(5.0, 3.0, 1.5)
for(i in Ts){
energia_t <- datos$magnetizacion[datos$T == i]
a<-acf(energia_t, lag.max = lag.max)
autocorrelacion <- rbind(autocorrelacion, cbind(a$acf, rep(i, (lag.max+1))))
}
autocorrelacion <- data.frame(autocorrelacion)
colnames(autocorrelacion) <- c("rho", "T")
autocorrelacion$T <- as.factor(autocorrelacion$T)
ggplot(data=autocorrelacion, aes(x=rep(1:(lag.max+1), times=length(unique(datos$T))), y=rho)) +
geom_line(aes(color=T)) +
labs(title="Autocorrelación magnetizacion (B=0)") +
labs(x="k", y="rho") +
theme_original()
i
Ts <- c("5.0", "3.0", "1.5")
i <-Ts[1]
energia_t <- datos$magnetizacion[datos$T == i]
head(datos)
energia_t <- datos$energia[datos$T == i]
head(energia_t)
Ts <- c(5, 3, 1.5)
for(i in Ts){
energia_t <- datos$energia[datos$T == i]
a<-acf(energia_t, lag.max = lag.max)
autocorrelacion <- rbind(autocorrelacion, cbind(a$acf, rep(i, (lag.max+1))))
}
autocorrelacion <- data.frame(autocorrelacion)
colnames(autocorrelacion) <- c("rho", "T")
autocorrelacion$T <- as.factor(autocorrelacion$T)
ggplot(data=autocorrelacion, aes(x=rep(1:(lag.max+1), times=length(unique(datos$T))), y=rho)) +
geom_line(aes(color=T)) +
labs(title="Autocorrelación magnetizacion (J=1, B=0)") +
labs(x="k", y="rho") +
theme_original()
ggplot(data=autocorrelacion, aes(x=rep(1:(lag.max+1), times=length(Ts), y=rho)) +
geom_line(aes(color=T)) +
labs(title="Autocorrelación magnetizacion (J=1, B=0)") +
labs(x="k", y="rho") +
theme_original()
#Autocorrelacion de forma casera
#s <- sd(energia_t)^2
#energia_t <- energia_t-mean(energia_t)
#comienzo = 1:length(datos$energia[datos$T == 1])
#ro <- c()
#for(k in 0:10000){
#  comienzo <- 1:(length(energia_t)-k)
#  r <- mean(energia_t[comienzo] * energia_t[comienzo+k])/mean(energia_t[comienzo]^2)
#ro <- c(ro,r)
#}
#plot(ro)
#MAGNETIZACION ESPONTANEA SIN CORONA
datos   <-data.frame(read_csv("corridas/sin_corona/magnetizacion.txt"))
ggplot(data=datos, aes(x=magnetizacion)) +
geom_histogram(aes(y=..count../sum(..count..)),
breaks=seq(-1, 1, by = 0.01),
col="black",
fill="white") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
labs(title="Magnetización (T entre 0.5 y 5), B=0") +
labs(x="Magnetización", y="Densidad") +
theme_original()
#MAGNETIZACION ESPONTANEA
datos   <-data.frame(read_csv("corridas/con_corona/magnetizacion.txt"))
magnetizacion_media <- aggregate(formula = magnetizacion ~ T+n, data = datos, FUN=mean)
magnetizacion_media$n <- as.factor(magnetizacion_media$n)
ggplot(data=magnetizacion_media, aes(x=T, y=magnetizacion)) +
geom_point(aes(color=n)) +
labs(title="Magnetización (B=0)") +
labs(x="T", y="Magnetización media por particula") +
theme_original()
#ENERGIA
datos   <-data.frame(read_csv("corridas/con_corona/energia.txt"))
energia_media <- aggregate(formula = energia ~ T+n, data = datos, FUN=mean)
energia_media$n <- as.factor(energia_media$n)
ggplot(data=energia_media, aes(x=T, y=energia)) +
geom_point(aes(color=n)) +
labs(title="Energía media (B=0)") +
labs(x="T", y="Energía media por particula") +
theme_original()
#SUSCEPTIBILIDAD MAGNETICA
datos   <-data.frame(read_csv("corridas/con_corona/magnetizacion.txt"))
datos   <-data.frame(read_csv("corridas/autocorrelacion/autocorrelacion_energia.txt"))
autocorrelacion <- matrix(ncol=2, nrow=0)
lag.max = 10000
Ts <- c(5, 3, 1.5)
for(i in Ts){
energia_t <- datos$energia[datos$T == i]
a<-acf(energia_t, lag.max = lag.max)
autocorrelacion <- rbind(autocorrelacion, cbind(a$acf, rep(i, (lag.max+1))))
}
autocorrelacion <- data.frame(autocorrelacion)
colnames(autocorrelacion) <- c("rho", "T")
autocorrelacion$T <- as.factor(autocorrelacion$T)
ggplot(data=autocorrelacion, aes(x=rep(1:(lag.max+1), times=length(Ts)), y=rho)) +
geom_line(aes(color=T)) +
labs(title="Autocorrelación magnetizacion (J=1, B=0)") +
labs(x="k", y="rho") +
theme_original()
datos   <-data.frame(read_csv("corridas/autocorrelacion/autocorrelacion_energia.txt"))
autocorrelacion <- matrix(ncol=2, nrow=0)
lag.max = 30000
Ts <- c(5, 3, 1.5)
for(i in Ts){
energia_t <- datos$energia[datos$T == i]
a<-acf(energia_t, lag.max = lag.max)
autocorrelacion <- rbind(autocorrelacion, cbind(a$acf, rep(i, (lag.max+1))))
}
autocorrelacion <- data.frame(autocorrelacion)
colnames(autocorrelacion) <- c("rho", "T")
autocorrelacion$T <- as.factor(autocorrelacion$T)
ggplot(data=autocorrelacion, aes(x=rep(1:(lag.max+1), times=length(Ts)), y=rho)) +
geom_line(aes(color=T)) +
labs(title="Autocorrelación magnetizacion (J=1, B=0)") +
labs(x="k", y="rho") +
theme_original()
#MAGNETIZACION ESPONTANEA SIN CORONA
datos   <-data.frame(read_csv("corridas/sin_corona/magnetizacion.txt"))
ggplot(data=datos, aes(x=magnetizacion)) +
geom_histogram(aes(y=..count../sum(..count..)),
breaks=seq(-1, 1, by = 0.01),
col="black",
fill="white") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
labs(title="Magnetización (T entre 0.5 y 5), B=0") +
labs(x="Magnetización", y="Densidad") +
theme_original()
128*128
#MAGNETIZACION ESPONTANEA
datos   <-data.frame(read_csv("corridas/con_corona/magnetizacion.txt"))
magnetizacion_media <- aggregate(formula = magnetizacion ~ T+n, data = datos, FUN=mean)
magnetizacion_media$n <- as.factor(magnetizacion_media$n)
ggplot(data=magnetizacion_media, aes(x=T, y=magnetizacion)) +
geom_point(aes(color=n)) +
labs(title="Magnetización (B=0)") +
labs(x="T", y="Magnetización media por particula") +
theme_original()
2000000/15000
10000000/15000
unique(datos$n)
datos <-datos[datos$n!=256, ]
magnetizacion_media <- aggregate(formula = magnetizacion ~ T+n, data = datos, FUN=mean)
magnetizacion_media$n <- as.factor(magnetizacion_media$n)
ggplot(data=magnetizacion_media, aes(x=T, y=magnetizacion)) +
geom_point(aes(color=n)) +
labs(title="Magnetización (J=1, B=0, J'=0)") +
labs(x="T", y="Magnetización media por particula") +
theme_original()
datos   <-data.frame(read_csv("corridas/con_corona/energia.txt"))
cv      <- aggregate(formula = energia ~ T+n, data = datos, FUN=sd)
cv$n <- as.factor(cv$n)
ggplot(data=cv, aes(x=T, y=energia)) +
geom_point(aes(color=n)) +
labs(title="Cv (B=0)") +
labs(x="T", y="Cv por particula") +
theme_original()
noisy.y <- cv[cv$n==128, c("T", "energia")]
model <- lm(noisy.y$energia ~ poly(noisy.y$T,20))
predicted.intervals <- predict(model,data.frame(x=noisy.y$T),interval='confidence', level=0.99)
plot(noisy.y)
lines(noisy.y$T,predicted.intervals[,1],col='green',lwd=3)
noisy.y$T[which.max(predicted.intervals[, 1])]
noisy.y <- cv[cv$n==64, c("T", "energia")]
model <- lm(noisy.y$energia ~ poly(noisy.y$T,20))
predicted.intervals <- predict(model,data.frame(x=noisy.y$T),interval='confidence', level=0.99)
plot(noisy.y)
lines(noisy.y$T,predicted.intervals[,1],col='green',lwd=3)
noisy.y$T[which.max(predicted.intervals[, 1])]
noisy.y <- cv[cv$n==32, c("T", "energia")]
model <- lm(noisy.y$energia ~ poly(noisy.y$T,20))
predicted.intervals <- predict(model,data.frame(x=noisy.y$T),interval='confidence', level=0.99)
plot(noisy.y)
lines(noisy.y$T,predicted.intervals[,1],col='green',lwd=3)
noisy.y$T[which.max(predicted.intervals[, 1])]
noisy.y <- cv[cv$n==256, c("T", "energia")]
model <- lm(noisy.y$energia ~ poly(noisy.y$T,20))
predicted.intervals <- predict(model,data.frame(x=noisy.y$T),interval='confidence', level=0.99)
plot(noisy.y)
lines(noisy.y$T,predicted.intervals[,1],col='green',lwd=3)
noisy.y$T[which.max(predicted.intervals[, 1])]
noisy.y <- cv[cv$n==64, c("T", "energia")]
model <- lm(noisy.y$energia ~ poly(noisy.y$T,20))
predicted.intervals <- predict(model,data.frame(x=noisy.y$T),interval='confidence', level=0.99)
plot(noisy.y)
lines(noisy.y$T,predicted.intervals[,1],col='green',lwd=3)
noisy.y$T[which.max(predicted.intervals[, 1])]
head(noisy.y)
class(noisy.y)
predicted.intervals[,1]
noisy.y$predicted <- predicted.intervals[,1]
noisy.y$T[which.max(predicted.intervals[, 1])]
class(noisy.y)
head(noisy.y)
ggplot(data=noisy.y, aes(x=T, y=energia)) +
geom_point() +
labs(title="Cv (L=64, J=1, B=0)") +
labs(x="T", y="Cv por particula") +
theme_original()
ggplot(data=noisy.y, aes(x=T, y=energia)) +
geom_point() +
geom_line(aes(x=T, y=predicted))
ggplot(data=noisy.y, aes(x=T, y=energia)) +
geom_point() +
geom_line(aes(x=T, y=predicted))+
labs(title="Cv (L=64, J=1, B=0)") +
labs(x="T", y="Cv por particula") +
theme_original()
ggplot(data=noisy.y, aes(x=T, y=energia)) +
geom_point() +
geom_line(aes(x=T, y=predicted), color="red") +
labs(title="Cv (L=64, J=1, B=0)") +
labs(x="T", y="Cv por particula") +
theme_original()
